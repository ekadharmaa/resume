{"ast":null,"code":"import axios from \"axios\"; // import moment from \"moment\";\n\nimport moment from \"moment-timezone\";\nimport Swal from \"sweetalert2\";\nexport default {\n  name: \"experienceComp\",\n\n  data() {\n    return {\n      tab: 1,\n      city: \"Srengseng Jakarta\",\n      localtime: \"\",\n      locationWeather: [],\n      currentWeather: [],\n      forecastWeather: [],\n      nextHour: [],\n      yourLocation: {\n        latitude: \"\",\n        longitude: \"\"\n      }\n    };\n  },\n\n  methods: {\n    loading() {\n      Swal.fire({\n        width: \"100px\",\n        allowOutsideClick: false\n      });\n      Swal.showLoading();\n    },\n\n    customDate(d) {\n      let day = d.substr(0, 10);\n      return moment(day).format(\"LL\");\n    },\n\n    customTime(d) {\n      return moment(d).format(\"LT\");\n    },\n\n    showPosition(position) {\n      this.yourLocation.latitude = position.coords.latitude;\n      this.yourLocation.longitude = position.coords.longitude;\n    },\n\n    getLocation() {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(this.showPosition);\n      } else {\n        alert(\"Geolocation is not supported by this browser.\");\n      }\n    },\n\n    checkLocation(city) {\n      this.city = city;\n      this.getWeather(city);\n    },\n\n    async getWeather(city = \"Srengseng Jakarta\") {\n      this.loading();\n\n      try {\n        const response = await axios.get(\"https://api.weatherapi.com/v1/forecast.json?key=61d9ab06af804125b17123311221507&q=\" + city + \"&aqi=yes\");\n        this.locationWeather = response.data.location;\n        this.currentWeather = response.data.current;\n        this.forecastWeather = response.data.forecast;\n        this.nextHour = [];\n        let array = this.forecastWeather.forecastday[0].hour;\n        array.forEach(i => {\n          if (i.time_epoch > this.locationWeather.localtime_epoch) {\n            this.nextHour.push(i);\n          }\n        });\n      } catch (e) {\n        console.log(e.response);\n      }\n\n      Swal.close();\n    },\n\n    async getWetaherByLocation(i) {\n      this.city = \"Location\";\n      this.loading();\n\n      try {\n        const response = await axios.get(\"https://api.weatherapi.com/v1/forecast.json?key=61d9ab06af804125b17123311221507&q=\" + i.latitude + \",\" + i.longitude + \"&aqi=yes\");\n        this.locationWeather = response.data.location;\n        this.currentWeather = response.data.current;\n        this.forecastWeather = response.data.forecast;\n        this.nextHour = [];\n        let array = this.forecastWeather.forecastday[0].hour;\n        array.forEach(i => {\n          if (i.time_epoch > this.locationWeather.localtime_epoch) {\n            this.nextHour.push(i);\n          }\n        });\n      } catch (e) {\n        console.log(e.response);\n      }\n\n      Swal.close();\n    }\n\n  },\n\n  created() {\n    this.getWeather();\n    this.getLocation();\n  }\n\n};","map":{"version":3,"mappings":"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","names":["axios","moment","Swal","name","data","tab","city","localtime","locationWeather","currentWeather","forecastWeather","nextHour","yourLocation","latitude","longitude","methods","loading","fire","width","allowOutsideClick","showLoading","customDate","d","day","substr","format","customTime","showPosition","position","coords","getLocation","navigator","geolocation","getCurrentPosition","alert","checkLocation","getWeather","response","get","location","current","forecast","array","forecastday","hour","forEach","i","time_epoch","localtime_epoch","push","e","console","log","close","getWetaherByLocation","created"],"sourceRoot":"","sources":["C:\\Users\\dl6\\Documents\\Hafidz\\resume\\src\\components\\experience.vue"],"sourcesContent":["<template>\r\n  <div id=\"experience\">\r\n    <div\r\n      class=\"row mt-3 justify-content-center\"\r\n      v-if=\"currentWeather?.length != 0\"\r\n    >\r\n      <div class=\"col-11\">\r\n        <div class=\"d-flex justify-content-between align-items-center mb-2\">\r\n          <div class=\"text-start\">\r\n            <button\r\n              class=\"btn btn-city btn-sm py-1 px-3 shadow-sm me-1\"\r\n              :class=\"city == 'Srengseng Jakarta' ? 'active' : ''\"\r\n              @click=\"checkLocation('Srengseng Jakarta')\"\r\n            >\r\n              Srengseng\r\n            </button>\r\n            <button\r\n              class=\"btn btn-city btn-sm py-1 px-3 shadow-sm\"\r\n              :class=\"city == 'Surakarta' ? 'active' : ''\"\r\n              @click=\"checkLocation('Surakarta')\"\r\n            >\r\n              Surakarta\r\n            </button>\r\n          </div>\r\n          <div class=\"text-end\" v-if=\"yourLocation.latitude != ''\">\r\n            <button\r\n              class=\"btn btn-city btn-sm py-1 px-3 shadow-sm\"\r\n              :class=\"city == 'Location' ? 'active' : ''\"\r\n              @click=\"getWetaherByLocation(yourLocation)\"\r\n            >\r\n              Your Location\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div class=\"card shadow-sm border-0\">\r\n          <div class=\"card-body\">\r\n            <div class=\"d-flex align-items-center justify-content-center\">\r\n              <div class=\"text-center\" style=\"width: 40%\">\r\n                <div class=\"px-3\">\r\n                  <img\r\n                    :src=\"currentWeather.condition.icon\"\r\n                    alt=\"\"\r\n                    class=\"w-50\"\r\n                    style=\"\r\n                      animation: up-bottom 2s ease-in-out infinite alternate;\r\n                    \"\r\n                  />\r\n                </div>\r\n                <p class=\"my-0\" style=\"text-transform: capitalize\">\r\n                  {{ currentWeather.condition.text }}\r\n                </p>\r\n              </div>\r\n              <div\r\n                class=\"ps-2 text-end\"\r\n                style=\"width: 60%\"\r\n                v-if=\"locationWeather?.length != 0\"\r\n              >\r\n                <h6 class=\"my-0\">\r\n                  {{ locationWeather.region + \", \" + locationWeather.country }}\r\n                </h6>\r\n                <h3 class=\"my-0\">{{ locationWeather.name }}</h3>\r\n                <small class=\"\">\r\n                  {{ customDate(locationWeather.localtime) }}\r\n                </small>\r\n              </div>\r\n            </div>\r\n            <Splide\r\n              :options=\"{\r\n                perPage: 2,\r\n                width: '100%',\r\n                gap: 15,\r\n                arrows: false,\r\n                padding: { left: 0, right: 20 },\r\n                pagination: false,\r\n              }\"\r\n              class=\"mt-2\"\r\n              v-if=\"nextHour?.length != 0\"\r\n            >\r\n              <SplideSlide\r\n                class=\"align-items-stretch d-grid\"\r\n                v-for=\"i in nextHour\"\r\n                :key=\"i\"\r\n              >\r\n                <div\r\n                  class=\"\r\n                    shadow-sm\r\n                    card-weather\r\n                    my-1\r\n                    p-2\r\n                    d-flex\r\n                    align-items-center\r\n                    justify-content-center\r\n                  \"\r\n                  style=\"border-radius: 10px\"\r\n                >\r\n                  <div class=\"pe-1\" style=\"width: 40%\">\r\n                    <img\r\n                      :src=\"i.condition.icon\"\r\n                      class=\"w-100\"\r\n                      style=\"animation: slide 2s ease-in-out infinite alternate\"\r\n                    />\r\n                  </div>\r\n                  <div class=\"text-end\" style=\"width: 60%\">\r\n                    <p\r\n                      class=\"my-0 position-absolute\"\r\n                      style=\"\r\n                        line-height: 15px;\r\n                        font-size: 0.75em;\r\n                        top: 15px;\r\n                        right: 10px;\r\n                      \"\r\n                    >\r\n                      <i class=\"fa-regular fa-clock me-2\"></i>\r\n                      {{ customTime(i.time) }}\r\n                    </p>\r\n                    <p\r\n                      class=\"my-0 mt-3 f-status\"\r\n                      style=\"line-height: 15px; text-transform: capitalize\"\r\n                    >\r\n                      {{ i.condition.text }}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </SplideSlide>\r\n            </Splide>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"ex-icon\">\r\n      <i class=\"fa-solid fa-briefcase\"></i>\r\n    </div>\r\n    <div class=\"experience\">\r\n      <div class=\"title\">Experience</div>\r\n      <div class=\"timeline d-flex align-items-end\">\r\n        <div class=\"timeline-sidebar\">\r\n          <div\r\n            class=\"ts-list pointer\"\r\n            :class=\"tab == 1 ? 'active shadow-sm' : ''\"\r\n            @click=\"tab = 1\"\r\n          >\r\n            <div class=\"ts-year\">2021-Current</div>\r\n            <div class=\"ts-pos\">Software Engineer Senior</div>\r\n            <hr class=\"my-1\" />\r\n            <div class=\"ts-year\">2019-2021</div>\r\n            <div class=\"ts-pos\">Software Engineer Associate</div>\r\n          </div>\r\n          <div\r\n            class=\"ts-list pointer\"\r\n            :class=\"tab == 2 ? 'active shadow-sm' : ''\"\r\n            @click=\"tab = 2\"\r\n          >\r\n            <div class=\"ts-year\">2015-2018</div>\r\n            <div class=\"ts-pos\">IT Staff</div>\r\n          </div>\r\n          <div\r\n            class=\"ts-list pointer\"\r\n            :class=\"tab == 3 ? 'active shadow-sm' : ''\"\r\n            @click=\"tab = 3\"\r\n          >\r\n            <div class=\"ts-year\">2016</div>\r\n            <div class=\"ts-pos\">Web Developer (Internship)</div>\r\n          </div>\r\n        </div>\r\n        <div class=\"timeline-content text-end\">\r\n          <transition name=\"slide\">\r\n            <div v-if=\"tab == 1\">\r\n              PT. Jawara Edukasih Indonesia\r\n              <hr class=\"my-1\" />\r\n              Managing all-in's website, such as maintaining, designing and\r\n              improving the website performance. After that i have made several\r\n              systems from planning until implementation, and this system can\r\n              help and make it easier for company to improve performance.\r\n            </div>\r\n          </transition>\r\n\r\n          <transition name=\"slide\">\r\n            <div v-if=\"tab == 2\">\r\n              Taman Cerdas Puntadewa\r\n              <hr class=\"my-1\" />\r\n              Guide childs around 7th until 15th years old to learn about\r\n              computer science, such as how to use computer from turning on and\r\n              off the computer, using microsoft office and painting with windows\r\n              feature etc.\r\n            </div>\r\n          </transition>\r\n\r\n          <transition name=\"slide\">\r\n            <div v-if=\"tab == 3\">\r\n              CV. Jogja Web Center\r\n              <hr class=\"my-1\" />\r\n              Learn about how to build and maintance the website with wordpress\r\n              platform. After that for my taks, i have made the financial system\r\n              to help managing company's finance with PHP Native.\r\n            </div>\r\n          </transition>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n// import moment from \"moment\";\r\nimport moment from \"moment-timezone\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nexport default {\r\n  name: \"experienceComp\",\r\n  data() {\r\n    return {\r\n      tab: 1,\r\n      city: \"Srengseng Jakarta\",\r\n      localtime: \"\",\r\n      locationWeather: [],\r\n      currentWeather: [],\r\n      forecastWeather: [],\r\n      nextHour: [],\r\n      yourLocation: {\r\n        latitude: \"\",\r\n        longitude: \"\",\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    loading() {\r\n      Swal.fire({\r\n        width: \"100px\",\r\n        allowOutsideClick: false,\r\n      });\r\n      Swal.showLoading();\r\n    },\r\n\r\n    customDate(d) {\r\n      let day = d.substr(0, 10);\r\n      return moment(day).format(\"LL\");\r\n    },\r\n\r\n    customTime(d) {\r\n      return moment(d).format(\"LT\");\r\n    },\r\n\r\n    showPosition(position) {\r\n      this.yourLocation.latitude = position.coords.latitude;\r\n      this.yourLocation.longitude = position.coords.longitude;\r\n    },\r\n\r\n    getLocation() {\r\n      if (navigator.geolocation) {\r\n        navigator.geolocation.getCurrentPosition(this.showPosition);\r\n      } else {\r\n        alert(\"Geolocation is not supported by this browser.\");\r\n      }\r\n    },\r\n\r\n    checkLocation(city) {\r\n      this.city = city;\r\n      this.getWeather(city);\r\n    },\r\n\r\n    async getWeather(city = \"Srengseng Jakarta\") {\r\n      this.loading();\r\n      try {\r\n        const response = await axios.get(\r\n          \"https://api.weatherapi.com/v1/forecast.json?key=61d9ab06af804125b17123311221507&q=\" +\r\n            city +\r\n            \"&aqi=yes\"\r\n        );\r\n\r\n        this.locationWeather = response.data.location;\r\n        this.currentWeather = response.data.current;\r\n        this.forecastWeather = response.data.forecast;\r\n\r\n        this.nextHour = [];\r\n        let array = this.forecastWeather.forecastday[0].hour;\r\n        array.forEach((i) => {\r\n          if (i.time_epoch > this.locationWeather.localtime_epoch) {\r\n            this.nextHour.push(i);\r\n          }\r\n        });\r\n      } catch (e) {\r\n        console.log(e.response);\r\n      }\r\n      Swal.close();\r\n    },\r\n\r\n    async getWetaherByLocation(i) {\r\n      this.city = \"Location\";\r\n\r\n      this.loading();\r\n      try {\r\n        const response = await axios.get(\r\n          \"https://api.weatherapi.com/v1/forecast.json?key=61d9ab06af804125b17123311221507&q=\" +\r\n            i.latitude +\r\n            \",\" +\r\n            i.longitude +\r\n            \"&aqi=yes\"\r\n        );\r\n\r\n        this.locationWeather = response.data.location;\r\n        this.currentWeather = response.data.current;\r\n        this.forecastWeather = response.data.forecast;\r\n\r\n        this.nextHour = [];\r\n        let array = this.forecastWeather.forecastday[0].hour;\r\n        array.forEach((i) => {\r\n          if (i.time_epoch > this.locationWeather.localtime_epoch) {\r\n            this.nextHour.push(i);\r\n          }\r\n        });\r\n      } catch (e) {\r\n        console.log(e.response);\r\n      }\r\n      Swal.close();\r\n    },\r\n  },\r\n  created() {\r\n    this.getWeather();\r\n    this.getLocation();\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.card-weather {\r\n  // background: linear-gradient(-45deg, var(--color-6) 20%, var(--color-4) 100%);\r\n  background: var(--color-2);\r\n  color: var(--text-color-2);\r\n}\r\n\r\n.f-status {\r\n  font-size: 0.9em;\r\n}\r\n\r\n.ex-icon {\r\n  position: absolute;\r\n  right: -30px;\r\n  font-size: 8em;\r\n  transform: rotate(-30deg);\r\n  opacity: 0.1;\r\n  color: var(--color-1);\r\n  z-index: 0;\r\n}\r\n\r\n.experience {\r\n  transition: all 0.4s;\r\n  position: relative;\r\n  z-index: 1;\r\n  padding: 40px 20px;\r\n}\r\n\r\n.timeline {\r\n  width: 100%;\r\n}\r\n\r\n.timeline-sidebar {\r\n  width: 40%;\r\n}\r\n\r\n.ts-list {\r\n  display: block;\r\n  padding: 10px 5px 10px 15px;\r\n  border-left: 5px solid var(--primary);\r\n}\r\n\r\n.ts-list::before {\r\n  position: absolute;\r\n  content: \"\";\r\n  border-radius: 10px;\r\n  height: 20px;\r\n  width: 20px;\r\n  margin-top: -2px;\r\n  margin-left: -27px;\r\n  background: var(--third);\r\n  transition: all 0.4s;\r\n}\r\n\r\n.ts-list.active::before {\r\n  background: var(--secondary);\r\n}\r\n\r\n.ts-list.active {\r\n  background: var(--four);\r\n  background-image: linear-gradient(60deg, var(--four) 50%, #fff);\r\n  color: var(--primary);\r\n  border-radius: 0 10px 10px 0;\r\n}\r\n\r\n.ts-year {\r\n  font-size: 0.7em;\r\n}\r\n\r\n.ts-pos {\r\n  font-size: 0.8em;\r\n}\r\n\r\n.timeline-content {\r\n  padding-left: 20px;\r\n  width: 60%;\r\n  font-size: 0.9em;\r\n}\r\n\r\n.btn-city {\r\n  background: var(--color-4);\r\n  color: var(--text-color-4);\r\n  border-radius: 20px;\r\n  border: 0;\r\n  transition: all 0.3s;\r\n}\r\n\r\n.btn-city:hover {\r\n  background: var(--color-6);\r\n  color: var(--text-color-6);\r\n}\r\n\r\n.btn-city.active {\r\n  background: var(--color-5);\r\n  color: var(--text-color-5);\r\n}\r\n\r\n.exp-active {\r\n  background: var(--four) !important;\r\n}\r\n\r\n/*\r\n  Enter and leave animations can use different\r\n  durations and timing functions.\r\n*/\r\n.slide-enter-active {\r\n  transition: all 0.6s ease-out;\r\n}\r\n\r\n.slide-leave-active {\r\n  // transition: all 0.8s cubic-bezier(1, 0.5, 0.8, 1);\r\n}\r\n\r\n.slide-enter-from,\r\n.slide-leave-to {\r\n  transform: translateX(20px);\r\n  opacity: 0;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}