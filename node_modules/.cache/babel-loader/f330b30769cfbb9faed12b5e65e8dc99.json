{"ast":null,"code":"import Services from \"../Services\";\nimport Swal from \"sweetalert2\";\nexport default {\n  name: \"contactUs\",\n\n  data() {\n    return {\n      contact: {\n        name: \"\",\n        email: \"\",\n        message: \"\"\n      }\n    };\n  },\n\n  methods: {\n    toast(s, t) {\n      const Toast = Swal.mixin({\n        toast: true,\n        position: \"top-end\",\n        showConfirmButton: false,\n        timer: 3000,\n        timerProgressBar: true,\n        didOpen: toast => {\n          toast.addEventListener(\"mouseenter\", Swal.stopTimer);\n          toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\n        }\n      });\n      Toast.fire({\n        icon: \"success\",\n        title: \"Signed in successfully\"\n      });\n    },\n\n    handleSubmit() {\n      Services.create(this.contact).then(() => {\n        console.log(\"Created new item successfully!\");\n        this.submitted = true;\n      }).catch(e => {\n        console.log(e);\n      });\n    }\n\n  },\n\n  created() {}\n\n};","map":{"version":3,"mappings":"AAkBA,OAAOA,QAAP,MAAqB,aAArB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AAEA,eAAe;EACbC,IAAI,EAAE,WADO;;EAEbC,IAAI,GAAG;IACL,OAAO;MACLC,OAAO,EAAE;QACPF,IAAI,EAAE,EADC;QAEPG,KAAK,EAAE,EAFA;QAGPC,OAAO,EAAE;MAHF;IADJ,CAAP;EAOD,CAVY;;EAWbC,OAAO,EAAE;IACPC,KAAK,CAACC,CAAD,EAAIC,CAAJ,EAAO;MACV,MAAMC,KAAI,GAAIV,IAAI,CAACW,KAAL,CAAW;QACvBJ,KAAK,EAAE,IADgB;QAEvBK,QAAQ,EAAE,SAFa;QAGvBC,iBAAiB,EAAE,KAHI;QAIvBC,KAAK,EAAE,IAJgB;QAKvBC,gBAAgB,EAAE,IALK;QAMvBC,OAAO,EAAGT,KAAD,IAAW;UAClBA,KAAK,CAACU,gBAAN,CAAuB,YAAvB,EAAqCjB,IAAI,CAACkB,SAA1C;UACAX,KAAK,CAACU,gBAAN,CAAuB,YAAvB,EAAqCjB,IAAI,CAACmB,WAA1C;QACD;MATsB,CAAX,CAAd;MAYAT,KAAK,CAACU,IAAN,CAAW;QACTC,IAAI,EAAE,SADG;QAETC,KAAK,EAAE;MAFE,CAAX;IAID,CAlBM;;IAoBPC,YAAY,GAAG;MACbxB,QAAQ,CAACyB,MAAT,CAAgB,KAAKrB,OAArB,EACGsB,IADH,CACQ,MAAM;QACVC,OAAO,CAACC,GAAR,CAAY,gCAAZ;QACA,KAAKC,SAAL,GAAiB,IAAjB;MACD,CAJH,EAKGC,KALH,CAKUC,CAAD,IAAO;QACZJ,OAAO,CAACC,GAAR,CAAYG,CAAZ;MACD,CAPH;IAQD;;EA7BM,CAXI;;EA0CbC,OAAO,GAAG,CAAE;;AA1CC,CAAf","names":["Services","Swal","name","data","contact","email","message","methods","toast","s","t","Toast","mixin","position","showConfirmButton","timer","timerProgressBar","didOpen","addEventListener","stopTimer","resumeTimer","fire","icon","title","handleSubmit","create","then","console","log","submitted","catch","e","created"],"sourceRoot":"","sources":["C:\\Users\\dl6\\Documents\\Hafidz\\resume\\src\\components\\contact.vue"],"sourcesContent":["<template>\r\n  <div id=\"contact\">\r\n    <form @submit.prevent=\"handleSubmit\">\r\n      <input type=\"text\" v-model=\"contact.name\" />\r\n      <input type=\"email\" v-model=\"contact.email\" />\r\n      <textarea\r\n        name=\"\"\r\n        id=\"\"\r\n        cols=\"30\"\r\n        rows=\"10\"\r\n        v-model=\"contact.message\"\r\n      ></textarea>\r\n      <button type=\"submit\">Submit</button>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Services from \"../Services\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nexport default {\r\n  name: \"contactUs\",\r\n  data() {\r\n    return {\r\n      contact: {\r\n        name: \"\",\r\n        email: \"\",\r\n        message: \"\",\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    toast(s, t) {\r\n      const Toast = Swal.mixin({\r\n        toast: true,\r\n        position: \"top-end\",\r\n        showConfirmButton: false,\r\n        timer: 3000,\r\n        timerProgressBar: true,\r\n        didOpen: (toast) => {\r\n          toast.addEventListener(\"mouseenter\", Swal.stopTimer);\r\n          toast.addEventListener(\"mouseleave\", Swal.resumeTimer);\r\n        },\r\n      });\r\n\r\n      Toast.fire({\r\n        icon: \"success\",\r\n        title: \"Signed in successfully\",\r\n      });\r\n    },\r\n\r\n    handleSubmit() {\r\n      Services.create(this.contact)\r\n        .then(() => {\r\n          console.log(\"Created new item successfully!\");\r\n          this.submitted = true;\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n        });\r\n    },\r\n  },\r\n  created() {},\r\n};\r\n</script>\r\n\r\n<style>\r\n</style>"]},"metadata":{},"sourceType":"module"}